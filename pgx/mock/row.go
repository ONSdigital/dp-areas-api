// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/ONSdigital/dp-areas-api/pgx"
	"sync"
)

// Ensure, that PGXRowMock does implement pgx.PGXRow.
// If this is not the case, regenerate this file with moq.
var _ pgx.PGXRow = &PGXRowMock{}

// PGXRowMock is a mock implementation of pgx.PGXRow.
//
// 	func TestSomethingThatUsesPGXRow(t *testing.T) {
//
// 		// make and configure a mocked pgx.PGXRow
// 		mockedPGXRow := &PGXRowMock{
// 			ScanFunc: func(dest ...interface{}) error {
// 				panic("mock out the Scan method")
// 			},
// 		}
//
// 		// use mockedPGXRow in code that requires pgx.PGXRow
// 		// and then make assertions.
//
// 	}
type PGXRowMock struct {
	// ScanFunc mocks the Scan method.
	ScanFunc func(dest ...interface{}) error

	// calls tracks calls to the methods.
	calls struct {
		// Scan holds details about calls to the Scan method.
		Scan []struct {
			// Dest is the dest argument value.
			Dest []interface{}
		}
	}
	lockScan sync.RWMutex
}

// Scan calls ScanFunc.
func (mock *PGXRowMock) Scan(dest ...interface{}) error {
	if mock.ScanFunc == nil {
		panic("PGXRowMock.ScanFunc: method is nil but PGXRow.Scan was just called")
	}
	callInfo := struct {
		Dest []interface{}
	}{
		Dest: dest,
	}
	mock.lockScan.Lock()
	mock.calls.Scan = append(mock.calls.Scan, callInfo)
	mock.lockScan.Unlock()
	return mock.ScanFunc(dest...)
}

// ScanCalls gets all the calls that were made to Scan.
// Check the length with:
//     len(mockedPGXRow.ScanCalls())
func (mock *PGXRowMock) ScanCalls() []struct {
	Dest []interface{}
} {
	var calls []struct {
		Dest []interface{}
	}
	mock.lockScan.RLock()
	calls = mock.calls.Scan
	mock.lockScan.RUnlock()
	return calls
}
