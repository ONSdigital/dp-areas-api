swagger: "2.0"
info:
  title: dp-areas-api
  description: "Digital Publishing areas API used to navigate profiles for different geographical areas across the UK"
  version: 1.0.0
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
schemes:
  - http
tags:
  - name: "Public"

parameters:
  id:
    name: id
    description: "Unique id of an area"
    in: path
    type: string
    required: true


  version:
    name: version
    description: "A version of a dataset"
    in: path
    type: string
    required: true

  offset:
    name: offset
    description: "The first row of items to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter. The
                  default value is 0"
    in: query
    type: integer
    required: false
    default: 0

  limit:
    name: limit
    description: "The number of items requested. The default value is 20 and the maximum allowed is 1000."
    in: query
    type: integer
    required: false
    default: 20

paths:

  /areas:
    get:
      tags:
        - "Public"
      summary: "Returns a list of all areas"
      description: "Returns a paginated list of all areas"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: "Successfully returned a json object containing a list of all areas"
          schema:
            type: object
            properties:
              count:
                description: "The number of areas returned"
                readOnly: true
                type: integer
                example: 1
              items:
                description: "A list of areas"
                type: array
                items:
                  $ref: '#/definitions/Area'
              limit:
                description: "The number of areas requested"
                type: integer
                default: 20
              offset:
                description: "The first row of areas to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
                type: integer
                default: 0
              total_count:
                description: "The total number of areas"
                readOnly: true
                type: integer
                example: 1
        400:
           $ref: '#/responses/InvalidRequestError'
        500:
           $ref: '#/responses/InternalError'

  /areas/{id}:
    get:
      tags:
        - "Public"
      summary: "Returns the latest version of an area"
      description: "Returns an area for a given id"
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: "Successfully returned an area for a given id"
          schema:
            $ref: "#/definitions/Area"
        404:
          $ref: "#/responses/ResourceNotFound"
        500:
          $ref: "#/responses/InternalError"

  /areas/{id}/versions:
    get:
      tags:
        - "Public"
      summary: "Returns a list of version history of an area "
      description: "Returns a list of available versions for an area for a given id"
      produces:
        - "application/json"
      parameters:
         - $ref: '#/parameters/id'
         - $ref: '#/parameters/offset'
         - $ref: '#/parameters/limit'
      responses:
        200:
          description: "A json list containing all version for an area"
          schema:
            $ref: "#/definitions/Versions"
        400:
          $ref: '#/responses/InvalidRequestError'
        404:
          description: "No versions found for the id provided"
        500:
          $ref: '#/responses/InternalError'

  /areas/{id}/versions/{version}:
    get:
      tags:
        - "Public"
      summary: "Get a version"
      description: "Get a specific version for an area"
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/version'
      responses:
        200:
          description: "A json object containing the version for an area"
          schema:
            $ref: '#/definitions/Version'
        400:
          $ref: '#/responses/InvalidRequestError'
        404:
          $ref: "#/responses/ResourceNotFound"
        500:
          $ref: '#/responses/InternalError'

definitions:
  Version:
    $ref: '#/definitions/Area'
  Area:
    type: object
    required: ["id"]
    properties:
      child_areas:
        type: array
        description: "An array of areas that are contained within the boundary of this area that are within the same geographical hierarchy"
        items:
          $ref: '#/definitions/Linked_area'
        example:
          id: "W05001011"
          type: "electoral wards"
          name: "Cyncoed"
      id:
        type: string
        description: "A unique id for the area"
        example: "W06000015"
      last_updated:
        type: string
        description: "The date when the data was last updated for the area"
        example: "2020-06-11T11:49:21.520922Z"
      name:
        type: string
        readOnly: true
        description: "The name of the area"
        example: "Cardiff"
      neighbouring_areas:
        type: array
        items:
          $ref: '#/definitions/Linked_area'
        description: "A list of areas that are within the same geographical hierarchy, at the same level (
                      but not necessarily of the same type) within that hierarchy and share a border with this area"
        example:
          id: "W06000014"
          type: "unitary authorities"
          name: "Vale of Glamorgan"
      parent_areas:
        type: array
        items:
          $ref: '#/definitions/Linked_area'
        description: "A list of areas whose boundaries contain this area that are within the same geographical hierarchy"
        example:
          id: "W92000004"
          type: "country"
          name: "wales"
      related_areas:
        type: array
        items:
          $ref: '#/definitions/Linked_area'
        description: "Has links to areas"
        example:
          id: "W05000872"
          type: "electoral wards"
          name: "Penylan"
      release_date:
        type: string
        description: "The date when the version was released"
        example: "2020-06-11T11:49:21.520922Z"
      type:
          $ref: "#/definitions/Type"
      version:
        type: integer
        readOnly: true
        description: "The version of current area"
        example: 1

  Linked_area:
    type: object
    required: ["id"]
    properties:
      id:
        $ref: '#/parameters/id'
      type:
        $ref: "#/definitions/Type"
      name:
        type: string
        readOnly: true
        description: "The name of the linked-area"

  Type:
        type: string
        description: "The type for an area"
        enum: [country, region, unitary authorities, combined authorities, metropolitan counties, counties, London boroughs,
               metropolitan districts, non-metropolitan districts, electoral wards]
        example: "unitary authorities"

  Versions:
    type: object
    properties:
      count:
        description: "The number of versions returned for an area"
        readOnly: true
        type: integer
        example: 1
      items:
        description: "An array of Areas"
        type: array
        items:
          $ref: '#/definitions/Version'
      limit:
        description: "The number of versions requested for an area"
        type: integer
        default: 20
      offset:
        description: "The first row of versions for an area to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
        type: integer
        default: 0
      total_count:
        description: "The total number of versions for an area"
        readOnly: true
        type: integer
        example: 1

responses:
  ResourceNotFound:
    description: "Resource was not found"
  InternalError:
    description: "Failed to process the request due to an internal error"
  InvalidRequestError:
    description: "Failed to process the request due to invalid request"
